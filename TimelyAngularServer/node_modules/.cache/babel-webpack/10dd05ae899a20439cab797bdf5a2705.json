{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/dinoz/source/repos/TimelySystem/TimelyAngularServer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(timeLogService) {\n    this.timeLogService = timeLogService;\n\n    this.StartTimer = () => {\n      this.startTime = new Date();\n      this.newTimeLog = {\n        startDate: this.startTime.toISOString()\n      };\n      this.timeLogService.create(this.newTimeLog).subscribe(result => {\n        console.log(result);\n        this.initProjectAdded();\n      }, error => console.log(error));\n    };\n\n    this.EndTimer = projectName => {\n      var _a, _b;\n\n      this.endTime = new Date();\n      if (this.startTime) this.timePassed = this.endTime.valueOf() - this.startTime.valueOf();\n      this.projectId = (_b = (_a = this.timeLogs) === null || _a === void 0 ? void 0 : _a.find(timeLog => timeLog.duration == null)) === null || _b === void 0 ? void 0 : _b.id;\n      console.log(this.projectId);\n\n      if (this.startTime) {\n        this.newTimeLog = {\n          id: this.projectId,\n          projectName: projectName,\n          startDate: this.startTime.toISOString(),\n          endDate: this.endTime.toISOString(),\n          duration: this.timePassed\n        };\n      }\n\n      console.log(this.newTimeLog);\n      this.timeLogService.update(this.newTimeLog).subscribe(result => {\n        console.log(result);\n        this.initProjectAdded();\n      }, error => console.log(error));\n    };\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.initProjectAdded();\n    })();\n  }\n\n  initProjectAdded() {\n    this.timeLogService.getAll().subscribe(result => {\n      this.timeLogs = result;\n    }, error => console.log(error));\n  }\n\n  writeTimes() {\n    console.log(this.startTime);\n    console.log(this.endTime);\n  }\n\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  styles: []\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"sources":["C:\\Users\\dinoz\\source\\repos\\TimelySystem\\TimelyAngularServer\\src\\app\\app.component.ts"],"names":[],"mappings":";;AAAA,SAAS,SAAT,QAA0B,eAA1B;AAQA,IAAa,YAAY,GAAzB,MAAa,YAAb,CAAyB;AASvB,EAAA,WAAA,CAAmB,cAAnB,EAAiD;AAA9B,SAAA,cAAA,GAAA,cAAA;;AAgBZ,SAAA,UAAA,GAAa,MAAW;AAC7B,WAAK,SAAL,GAAiB,IAAI,IAAJ,EAAjB;AACA,WAAK,UAAL,GAAkB;AAChB,QAAA,SAAS,EAAE,KAAK,SAAL,CAAe,WAAf;AADK,OAAlB;AAGA,WAAK,cAAL,CAAoB,MAApB,CAA2B,KAAK,UAAhC,EAA4C,SAA5C,CAAsD,MAAM,IAAG;AAC7D,QAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AACA,aAAK,gBAAL;AACD,OAHD,EAGG,KAAK,IAAI,OAAO,CAAC,GAAR,CAAY,KAAZ,CAHZ;AAID,KATM;;AAWA,SAAA,QAAA,GAAY,WAAD,IAA8B;;;AAC9C,WAAK,OAAL,GAAe,IAAI,IAAJ,EAAf;AACA,UAAI,KAAK,SAAT,EAAoB,KAAK,UAAL,GAAkB,KAAK,OAAL,CAAa,OAAb,KAAyB,KAAK,SAAL,CAAe,OAAf,EAA3C;AAEpB,WAAK,SAAL,GAAiB,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,KAAK,QAAL,MAAa,IAAb,IAAa,EAAA,KAAA,KAAA,CAAb,GAAa,KAAA,CAAb,GAAa,EAAA,CAAE,IAAF,CAAO,OAAO,IAAI,OAAO,CAAC,QAAR,IAAoB,IAAtC,CAAb,MAAwD,IAAxD,IAAwD,EAAA,KAAA,KAAA,CAAxD,GAAwD,KAAA,CAAxD,GAAwD,EAAA,CAAE,EAA3E;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,KAAK,SAAjB;;AAEA,UAAI,KAAK,SAAT,EAAoB;AAClB,aAAK,UAAL,GAAkB;AAChB,UAAA,EAAE,EAAE,KAAK,SADO;AAEhB,UAAA,WAAW,EAAE,WAFG;AAGhB,UAAA,SAAS,EAAE,KAAK,SAAL,CAAe,WAAf,EAHK;AAIhB,UAAA,OAAO,EAAE,KAAK,OAAL,CAAa,WAAb,EAJO;AAKhB,UAAA,QAAQ,EAAE,KAAK;AALC,SAAlB;AAOD;;AACD,MAAA,OAAO,CAAC,GAAR,CAAY,KAAK,UAAjB;AAGA,WAAK,cAAL,CAAoB,MAApB,CAA2B,KAAK,UAAhC,EAA4C,SAA5C,CAAsD,MAAM,IAAG;AAC7D,QAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AACA,aAAK,gBAAL;AACD,OAHD,EAGG,KAAK,IAAI,OAAO,CAAC,GAAR,CAAY,KAAZ,CAHZ;AAID,KAvBM;AA3B+C;;AAEzC,EAAA,QAAQ,GAAA;AAAA;;AAAA;AACnB,MAAA,KAAI,CAAC,gBAAL;AADmB;AAEpB;;AAEM,EAAA,gBAAgB,GAAA;AACrB,SAAK,cAAL,CAAoB,MAApB,GAA6B,SAA7B,CAAuC,MAAM,IAAG;AAC9C,WAAK,QAAL,GAAgB,MAAhB;AACD,KAFD,EAEG,KAAK,IAAI,OAAO,CAAC,GAAR,CAAY,KAAZ,CAFZ;AAGD;;AACM,EAAA,UAAU,GAAA;AACf,IAAA,OAAO,CAAC,GAAR,CAAY,KAAK,SAAjB;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,KAAK,OAAjB;AACD;;AAvBsB,CAAzB;AAAa,YAAY,GAAA,UAAA,CAAA,CALxB,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,UADD;AAET,EAAA,WAAW,EAAE,sBAFJ;AAGT,EAAA,SAAS,EAAE,CAAC,qBAAD,CAHF;;AAAA,CAAD,CAKe,CAAA,EAAZ,YAAY,CAAZ;SAAA,Y","sourcesContent":["import { Component } from '@angular/core';\nimport { TimeLogService } from './app.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\r\n  public timeLogs?: TimeLog[];\r\n  public newTimeLog?: TimeLog;\r\n  public startTime?: Date;\r\n  public endTime?: Date;\r\n  public timePassed?: number;\r\n  public projectName?: string;\n  public projectId?: number;\n\n  constructor(public timeLogService: TimeLogService) { }\n\n  public async ngOnInit(): Promise<void> {\n    this.initProjectAdded();\r\n  }\n\n  public initProjectAdded() {\n    this.timeLogService.getAll().subscribe(result => {\r\n      this.timeLogs = result;\r\n    }, error => console.log(error));\r\n  }\n  public writeTimes() {\n    console.log(this.startTime);\r\n    console.log(this.endTime);\r\n  }\n\n  public StartTimer = (): void => {\n    this.startTime = new Date();\r\n    this.newTimeLog = {\r\n      startDate: this.startTime.toISOString()\r\n    }\r\n    this.timeLogService.create(this.newTimeLog).subscribe(result => {\r\n      console.log(result);\r\n      this.initProjectAdded();\r\n    }, error => console.log(error));\r\n  }\n\n  public EndTimer = (projectName: string): void => {\r\n    this.endTime = new Date();\r\n    if (this.startTime) this.timePassed = this.endTime.valueOf() - this.startTime.valueOf();\r\n\r\n    this.projectId = this.timeLogs?.find(timeLog => timeLog.duration == null)?.id;\r\n    console.log(this.projectId);\r\n\r\n    if (this.startTime) {\r\n      this.newTimeLog = {\r\n        id: this.projectId,\r\n        projectName: projectName,\r\n        startDate: this.startTime.toISOString(),\r\n        endDate: this.endTime.toISOString(),\r\n        duration: this.timePassed\r\n      }\r\n    }\r\n    console.log(this.newTimeLog);\r\n\r\n\r\n    this.timeLogService.update(this.newTimeLog).subscribe(result => {\r\n      console.log(result);\r\n      this.initProjectAdded();\r\n    }, error => console.log(error));\r\n  }\n}\n\r\ninterface TimeLog {\r\n  id?: number;\r\n  projectName?: string;\r\n  startDate: string;\r\n  endDate?: string;\r\n  duration?: number;\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}